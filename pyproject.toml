[tool.poetry]
name = "cogniforge"
version = "0.1.0"
description = "A Python project with FastAPI, PyBullet, and ML libraries"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{include = "cogniforge"}]
python = "^3.11"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.115.0"
uvicorn = {extras = ["standard"], version = "^0.32.0"}
pybullet = "^3.2.6"
numpy = "^1.26.0"
pillow = "^10.4.0"
gymnasium = "^0.29.1"
torch = "^2.5.0"
stable-baselines3 = "^2.3.2"
cmaes = "^0.11.1"
python-dotenv = "^1.0.1"
openai = "^1.54.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-cov = "^5.0.0"
black = "^24.10.0"
ruff = "^0.6.9"
mypy = "^1.11.2"
pre-commit = "^3.8.0"
flake8 = "^7.0.0"
flake8-bugbear = "^24.2.6"
flake8-comprehensions = "^3.14.0"
flake8-simplify = "^0.21.0"
flake8-docstrings = "^1.7.0"
pep8-naming = "^0.13.3"
isort = "^5.13.2"
bandit = "^1.7.8"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
split_on_trailing_comma = true
skip_glob = ["*/migrations/*", "*/.venv/*"]
known_first_party = ["cogniforge"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = ["E501", "B008", "B905"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
pythonpath = ["."]
testpaths = ["tests"]
addopts = "-v --tb=short"